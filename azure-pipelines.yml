# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
    - main
    - qa
    - refs/tags/*
    - releases/tags/*
    - azure-pipeline

resources:
- repo: self

pr:
  - main
  - qa

variables:
# Container registry service connection established during pipeline creation
- name: dockerRegistryServiceConnection
  value: 'cb295ce7-2beb-436a-8d5d-4be6579b4b3b'
- name: imageRepository
  value: 'react-cv'
- name: containerRegistry
  value: 'nicoandra.azurecr.io'
- name: dockerfilePath
  value: '$(Build.SourcesDirectory)/Dockerfile'
- name: tag
  value: '$(Build.BuildId)'
- name: commitHash
  value: '$(Build.SourceVersion)'
- name: sourceBranch
  value: $[variables['build.sourceBranch']]
- name: isMainBranch
  value: $[eq(variables['build.sourceBranch'], 'refs/heads/main')]
- name: isQaBranch
  value: $[startsWith(variables['build.sourceBranch'], 'refs/heads/qa')]
- name: dockerTagName
  ${{ if startsWith(variables['build.sourceBranch'], 'refs/heads/qa') }}:
    value: qa
  ${{ if startsWith(variables['build.sourceBranch'], 'refs/heads/main') }}:
    value: latest
    

pool:
  vmImage: 'ubuntu-20.04'

stages:
- stage: "ShowVariables"
  jobs:
  - job: "ShowVariables"
    steps:
    - bash: |
        echo "sourceBranch: $(sourceBranch)"
        echo "isMainBranch: $(isMainBranch)"
        echo "isQaBranch: $(isQaBranch)"
        echo "commitHash: $(commitHash)"
        echo "dockerTagName $(dockerTagName)"
- stage: Build
  displayName: Build and push stage
  jobs:
  - job: Build
    displayName: Build
    condition: or(eq(variables.isMainBranch, true), eq(variables.isQaBranch, true))
    steps:
    - task: Docker@2
      displayName: Build and push Latest
      condition: and(false, eq(variables.isMainBranch, true))
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          latest
    - task: Docker@2
      displayName: Build and push RC
      condition: and(false, eq(variables.isQaBranch, true))
      inputs:
        command: buildAndPush
        repository: $(imageRepository)
        dockerfile: $(dockerfilePath)
        containerRegistry: $(dockerRegistryServiceConnection)
        tags: |
          $(tag)
          qa

- stage: Deploy
  displayName: Deploy
  jobs:
  - job: DeployAppService
    displayName: Deploy as App Service - docker
    condition: and(false, or(eq(variables.isMainBranch, true), eq(variables.isQaBranch, true)))
    steps:
    - task: AzureRmWebAppDeployment@4
      displayName: Deploy to QA
      condition: eq(variables.isQaBranch, true)
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Free Trial(1)(2796664e-e9d7-4d96-a30d-36aba0e530b2)'
        appType: 'webAppContainer'
        WebAppName: 'nicoandra-qa'
        DockerNamespace: 'nicoandra.azurecr.io'
        DockerRepository: 'react-cv'
        DockerImageTag: 'qa'
    - task: AzureRmWebAppDeployment@4
      displayName: Deploy to Prod
      condition: eq(variables.isMainBranch, true)
      inputs:
        ConnectionType: 'AzureRM'
        azureSubscription: 'Free Trial(1)(2796664e-e9d7-4d96-a30d-36aba0e530b2)'
        appType: 'webAppContainer'
        WebAppName: 'nicoandra'
        DockerNamespace: 'nicoandra.azurecr.io'
        DockerRepository: 'react-cv'
        DockerImageTag: 'latest'
  - job: DeployBlobContainer
    displayName: Deploy as Storage Blob to container=$web
    condition: eq(variables.isQaBranch, true)
    steps:
    - bash: |
        npm install
        npm run build
      displayName: Compile App to ./build
    - bash: |
        az storage blob upload-batch --account-name nicoandra -s . -d '$web'
      displayName: Copy to Blob Container