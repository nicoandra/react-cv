# Docker
# Build and push an image to Azure Container Registry
# https://docs.microsoft.com/azure/devops/pipelines/languages/docker

trigger:
  branches:
    include:
    - main
    - qa
    - refs/tags/*
    - releases/tags/*
    - azure-pipeline

resources:
- repo: self

pr:
  - main
  - qa

variables:
# Container registry service connection established during pipeline creation
- name: tag
  value: '$(Build.BuildId)'
- name: commitHash
  value: '$(Build.SourceVersion)'
- name: sourceBranch
  value: $[variables['build.sourceBranch']]
- name: isMainBranch
  value: $[eq(variables['build.sourceBranch'], 'refs/heads/main')]
- name: isQaBranch
  value: $[startsWith(variables['build.sourceBranch'], 'refs/heads/qa')]
- name: targetAppName
  ${{ if startsWith(variables['build.sourceBranch'], 'refs/heads/qa') }}:
    value: stagingnicoandra
  ${{ if startsWith(variables['build.sourceBranch'], 'refs/heads/main') }}:
    value: nicoandra
- name: azureSubscription
  value: 'Free Trial(1)(2796664e-e9d7-4d96-a30d-36aba0e530b2)'
    

pool:
  vmImage: 'ubuntu-20.04'

stages:
# - stage: Deploy
#   displayName: Deploy
#   jobs:
#   - job: ShowVariables
#     steps:
#     - bash: |
#         echo "sourceBranch: $(sourceBranch)"
#         echo "isMainBranch: $(isMainBranch)"
#         echo "isQaBranch: $(isQaBranch)"
#         echo "commitHash: $(commitHash)"
#         echo "targetAppName: $(targetAppName)"

- stage: NestApp
  jobs:
  - template: '.pipeline/job_check_changes.yml'
    parameters:
      path: "nest-app/"
      appName: "nestApp"
  - job: DeployFunctionApp
    displayName: Deploy Function App
    dependsOn: CheckChanges
    condition: and(eq(dependencies.CheckChanges.outputs['check_changes.nestApp'], 'true'), eq(variables.isMainBranch, true))
    steps:
    - bash: |
        npm install
        npm run build
      workingDirectory: $(Build.SourcesDirectory)/nest-app
      displayName: Compile
    - bash: |
        mkdir toZip
        rm node_modules -r
        npm install --only=production
        mv dist toZip
        mv node_modules toZip
        mv main toZip
      workingDirectory: $(Build.SourcesDirectory)/nest-app
      displayName: Make lean
    - task: ArchiveFiles@2
      inputs:
        rootFolderOrFile: $(Build.SourcesDirectory)/nest-app/toZip
        includeRootFolder: false
        archiveType: zip
        archiveFile: '$(System.ArtifactsDirectory)/app.zip' 
        replaceExistingArchive: true 
    - task: AzureFunctionApp@1
      displayName: Deploy FunctionApp
      inputs:
        azureSubscription: $(azureSubscription)
        appType: functionAppLinux
        appName: $(targetAppName)
        package: $(System.ArtifactsDirectory)/app.zip      

- stage: uiCV
  jobs:
  - template: '.pipeline/job_check_changes.yml'
    parameters:
      path: "ui-cv/"
      appName: "uiCV"
  - job: DeployBlobContainer
    displayName: Deploy as Storage Blob to container=$web
    dependsOn: CheckChanges
    condition: and(eq(dependencies.CheckChanges.outputs['check_changes.uiCV'], 'true'), or(eq(variables.isQaBranch, true), eq(variables.isMainBranch, true)))
    steps:
    - bash: |
        npm install
        npm run build
      displayName: Compile App to ./build
      workingDirectory: $(Build.SourcesDirectory)/ui-cv
      env:
        REACT_APP_CONTACT_FORM_POSTBACK_URL: https://nicoandra.azurewebsites.net/api/contactform-onsubmit
        REACT_APP_RECAPTCHA_SITE_KEY: 6LdvDi4aAAAAAO0wUdv-n40lIutg4slj9SQa7iqk
    - task: AzureCLI@2
      displayName: Copy to Blob Container
      inputs:
        azureSubscription: $(azureSubscription)
        scriptType: bash
        scriptLocation: inlineScript
        workingDirectory: $(Build.SourcesDirectory)/ui-cv
        inlineScript: |
          echo "With targetAppName=$(targetAppName)"
          az storage blob upload-batch --account-name $(targetAppName) -s ./build -d \$web      
    
- stage: uiRepairShop
  jobs:
  - template: '.pipeline/job_check_changes.yml'
    parameters:
      path: "ui-repair-shop/"
      appName: "uiRepairShop"
